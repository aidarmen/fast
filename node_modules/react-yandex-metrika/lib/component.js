/* eslint-env browser */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.YMInitializer = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _init = require('./init');

var _init2 = _interopRequireDefault(_init);

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var YMInitializer = function (_Component) {
    _inherits(YMInitializer, _Component);

    function YMInitializer() {
        _classCallCheck(this, YMInitializer);

        return _possibleConstructorReturn(this, (YMInitializer.__proto__ || Object.getPrototypeOf(YMInitializer)).apply(this, arguments));
    }

    _createClass(YMInitializer, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            (0, _init2.default)(this.props.accounts, this.props.options, this.props.version);
            var el = document.createElement('script');
            el.type = 'text/javascript';
            el.async = true;
            el.src = (0, _constants.scriptPath)(this.props.version);
            this.insertPoint.insertBefore(el, null);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var setInsertPoint = function setInsertPoint(element) {
                _this2.insertPoint = element;
            };
            return _react2.default.createElement(this.props.containerElement, { ref: setInsertPoint }, this.props.children);
        }
    }]);

    return YMInitializer;
}(_react.Component);

YMInitializer.displayName = 'YMInitializer';

YMInitializer.propTypes = {
    accounts: _propTypes2.default.arrayOf(_propTypes2.default.number).isRequired,
    containerElement: _propTypes2.default.string,
    options: _propTypes2.default.object,
    version: _propTypes2.default.oneOf(['1', '2'])
};

YMInitializer.defaultProps = {
    containerElement: 'div',
    options: {},
    version: '1'
};

exports.YMInitializer = YMInitializer;
